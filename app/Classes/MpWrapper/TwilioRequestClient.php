<?php

namespace App\Classes\MpWrapper;

use App\ExternalSystemRequestLog;
use Twilio\Http\CurlClient;

class TwilioRequestClient extends CurlClient
{
    public function __construct(array $options = array())
    {
        parent::__construct($options);
    }

    public function request($method, $url, $params = array(), $data = array(), $headers = array(), $user = null, $password = null, $timeout = null)
    {
        try {
            return parent::request($method, $url, $params, $data, $headers, $user, $password, $timeout); // TODO: Change the autogenerated stub
        }catch (\Exception $exception){
            throw $exception;
        } finally {
            $backtrace = debug_backtrace(DEBUG_BACKTRACE_IGNORE_ARGS);
            $log = [
                'category' => 'Twilio' ,
                'performing_function' => isset($backtrace[8]['function']) ? $backtrace[8]['function'] : null,
                'api_url' => $url,
                'method' => $method,
                'request_data' => json_encode($data),
                'request_headers' => json_encode($headers),
                'response_data' => json_encode($this->lastResponse->getContent()),
                'response_headers' => json_encode($this->lastResponse->getHeaders()),
                'response_status_code' => json_encode($this->lastResponse->getStatusCode()),
                'full_backtrace' => json_encode($backtrace)
            ];
            ExternalSystemRequestLog::create($log);
        }
    }

}