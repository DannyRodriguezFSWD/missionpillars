<?php

namespace App\Traits;

use App\Models\Tag;
use App\Models\Folder;
use App\Models\Group;
use Illuminate\Support\Facades\DB;
use App\Constants;

/**
 *
 * @author josemiguel
 */
trait FoldersTrait {

    public static function findOrCreate($name, $type = 'TAGS', $tenant = null, $autogenerated = false) {
        if( auth()->check() ){
            $folder = Folder::where([
                ['name', '=', $name],
                ['type', '=', 'TAGS']
            ])->first();
            if(is_null($folder)){
                $folder = new Folder();
                array_set($folder, 'name', $name);
                array_set($folder, 'type', $type);
                array_set($folder, 'is_system_autogenerated', $autogenerated);
                array_set($folder, 'folder_parent_id', array_get(Constants::TAG_SYSTEM, 'FOLDERS.AUTO_GENERATED'));
                auth()->user()->tenant->folders()->save($folder);
            }
        }
        else{
            $folder = Folder::withoutGlobalScopes()->where([
                ['name', '=', $name],
                ['type', '=', 'TAGS'],
                ['tenant_id', '=', array_get($tenant, 'id')]
            ])->first();
            
            if(is_null($folder)){
                $id = DB::table('folders')->insertGetId([
                    'name' => $name,
                    'type' => $type,
                    'tenant_id' => array_get($tenant, 'id'),
                    'folder_parent_id' => array_get(Constants::TAG_SYSTEM, 'FOLDERS.AUTO_GENERATED')
                ]);
                
                $folder = Folder::withoutGlobalScopes()->where('id', $id)->first();
            }
        }
        return $folder;
    }

}
