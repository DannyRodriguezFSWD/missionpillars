<?php

use Illuminate\Support\Facades\Schema;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Database\Migrations\Migration;

use App\Classes\Shared\MergeData\MergeData;
use App\Models\Contact;
use App\Models\MergeHistory;
use App\Scopes\TenantScope;

class RetroactivelyMergeAutoTags extends Migration
{
    /**
     * Run the migrations.
     *
     * @return void
     */
    public function up()
    {
        //
        $mergedata = new MergeData;
        $history = MergeHistory::withoutGlobalScope(TenantScope::class)->selectRaw('DISTINCT tenant_id, merged_in_contact_id contact_id, deleted_contact_id')
        ->where('relation_type',Contact::class)
        ->orderBy('id')->get();
        echo "About to process {$history->count()} merge history records\n\n";
        
        $history->each(function($merge) use ($mergedata) {
            TenantScope::useTenantId($merge->tenant_id);
            $merged_tags = $mergedata->tags(
                $merge->contact_id, [$merge->deleted_contact_id], 
                true, // include trashed
                true // only autogenerated
            );
            
            $count = count($merged_tags);
            if ($count) echo "$count tags applied to contact #{$merge->contact_id} from contact #{$merge->deleted_contact_id}\n";
        });
    }

    /**
     * Reverse the migrations.
     *
     * @return void
     */
    public function down()
    {
        //
    }
}
